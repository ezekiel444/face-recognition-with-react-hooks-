{"version":3,"sources":["components/Navigations/Navigation.js","components/FaceRecognition/FaceRecognition.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","Sign/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js","components/Logo/brain.jpg"],"names":["Navigation","onChangeRoute","isSignedIn","style","display","justifyContent","onClick","className","FaceRecognition","imageUrl","box","id","src","alt","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Logo","options","max","Brain","paddingTop","ImageLinkForm","onChangeHandle","onSubmitPicture","type","onChange","Rank","updateUser","name","entries","SignIn","handleUserUpdate","useState","isEmail","setIsEmail","isPassword","setIsPassword","htmlFor","event","target","value","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","data","Register","setEmail","setName","setPassword","userdata","console","log","app","Clarifai","App","apiKey","paramsOptions","particles","number","size","initialState","joined","inputValue","setInput","setImageUrl","setBox","signInRoute","setSignInRoute","isSignIn","setIsSignIn","setUpdateUser","route","params","e","models","predict","FACE_DETECT_MODEL","calculatedImage","prevState","catch","err","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","right_col","top_row","bottom_row","imageCalculation","error","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.b7d11348.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Navigation({ onChangeRoute, isSignedIn }) {\n  if (isSignedIn) {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onChangeRoute(\"signout\")}\n          className=\"f3 link dim black underline pa3 pointer\"\n        >\n          sign out\n        </p>\n      </nav>\n    );\n  } else {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onChangeRoute(\"signin\")}\n          className=\"f3 link dim black underline pa3 pointer\"\n        >\n          sign in\n        </p>\n        <p\n          onClick={() => onChangeRoute(\"register\")}\n          className=\"f3 link dim black underline pa3 pointer\"\n        >\n          Register\n        </p>\n      </nav>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport \"./FaceRecognition.css\";\nfunction FaceRecognition({ imageUrl, box }) {\n  return (\n    <div className=\"center ma\">\n      <div className=\"absolute mt2\">\n        <img\n          id=\"inputImage\"\n          src={imageUrl}\n          alt=\"\"\n          width=\"500px\"\n          height=\"auto\"\n        />\n        <div\n          className=\"bounding_box\"\n          style={{\n            top: box.topRow,\n            right: box.rightCol,\n            bottom: box.bottomRow,\n            left: box.leftCol,\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n}\n\nexport default FaceRecognition;\n","import React from \"react\";\nimport Tilt from \"react-tilt\";\nimport Brain from \"./brain.jpg\";\nimport \"./logo.css\";\n\nfunction Logo() {\n  return (\n    <div className=\"ma4 mt0\">\n      <Tilt\n        className=\"Tilt br2 shadow-2\"\n        options={{ max: 55 }}\n        style={{ height: 160, width: 150 }}\n      >\n        <div className=\"Tilt-inner pa3\">\n          <img\n            src={Brain}\n            style={{ paddingTop: \"5px\" }}\n            alt=\"artificialBrianLogo\"\n          />\n        </div>\n      </Tilt>\n    </div>\n  );\n}\n\nexport default Logo;\n","import React from \"react\";\nimport \"./Imagelinkform.css\";\n\nfunction ImageLinkForm({ onChangeHandle, onSubmitPicture }) {\n  return (\n    <div>\n      <p className=\"f3\">\n        {\"This magic brain will detect faces and your picture. Give it a try.\"}\n      </p>\n      <div className=\"center\">\n        <div className=\"form center pa4 br3 shadow-5\">\n          <input\n            type=\"text\"\n            onChange={onChangeHandle}\n            className=\"f4 pa2 center w-70 \"\n          />\n          <button\n            onClick={onSubmitPicture}\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\"\n          >\n            Detect\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageLinkForm;\n","import React from \"react\";\n\nfunction Rank({ updateUser }) {\n  return (\n    <div>\n      <div className=\"white f3\">{`${updateUser.name} your current rank is ....`}</div>\n      <div className=\"white f1\">{updateUser.entries}</div>\n    </div>\n  );\n}\n\nexport default Rank;\n","import React, { useState } from \"react\";\n\nfunction SignIn({ onChangeRoute, handleUserUpdate }) {\n  const [isEmail, setIsEmail] = useState(\"\");\n  const [isPassword, setIsPassword] = useState(\"\");\n\n  const changeEmail = (event) => {\n    setIsEmail(event.target.value);\n  };\n\n  const changePassword = (event) => {\n    setIsPassword(event.target.value);\n  };\n\n  const changeSubmit = () => {\n    fetch(\" https://limitless-fortress-98511.herokuapp.com/signin\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: isEmail,\n        password: isPassword,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.id) {\n          handleUserUpdate(data);\n          onChangeRoute(\"home\");\n        }\n      });\n  };\n\n  return (\n    <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n      <main className=\"pa4 black-80\">\n        <div className=\"measure \">\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                Email\n              </label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"email\"\n                name=\"email-address\"\n                id=\"email-address\"\n                onChange={changeEmail}\n              />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                Password\n              </label>\n              <input\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                onChange={changePassword}\n              />\n            </div>\n          </fieldset>\n          <div className=\"\">\n            <input\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n              type=\"submit\"\n              value=\"Sign in\"\n              onClick={changeSubmit}\n            />\n          </div>\n          <div className=\"lh-copy mt3\">\n            <p\n              onClick={() => onChangeRoute(\"register\")}\n              className=\"f6 link dim black db pointer\"\n            >\n              Register\n            </p>\n          </div>\n        </div>\n      </main>\n    </article>\n  );\n}\n\nexport default SignIn;\n","import React, { useState } from \"react\";\n\nfunction Register({ onChangeRoute, handleUserUpdate }) {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const changeEmail = (event) => {\n    setEmail(event.target.value);\n  };\n  const changeName = (event) => {\n    setName(event.target.value);\n  };\n  const changePassword = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleRegister = () => {\n    fetch(\"https://limitless-fortress-98511.herokuapp.com/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        name: name,\n        password: password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((userdata) => {\n        console.log(userdata);\n        if (userdata.id) {\n          handleUserUpdate(userdata);\n          onChangeRoute(\"home\");\n        }\n      });\n  };\n\n  return (\n    <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n      <main className=\"pa4 black-80\">\n        <div className=\"measure \">\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                Email\n              </label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"email\"\n                name=\"email-address\"\n                id=\"email-address\"\n                onChange={changeEmail}\n              />\n\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                Name\n              </label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                onChange={changeName}\n              />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                Password\n              </label>\n              <input\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                onChange={changePassword}\n              />\n            </div>\n          </fieldset>\n          <div className=\"\">\n            <input\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n              type=\"submit\"\n              onClick={handleRegister}\n              value=\"Register\"\n            />\n          </div>\n        </div>\n      </main>\n    </article>\n  );\n}\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport Particles from \"react-particles-js\";\nimport Clarifai from \"clarifai\";\nimport Navigation from \"./components/Navigations/Navigation\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport \"./App.css\";\nimport SignIn from \"./Sign/SignIn\";\nimport Register from \"./components/Register/Register\";\n\nconst app = new Clarifai.App({\n  apiKey: \"8d808ca0358241eba156f4455a4bb4c2\",\n});\n\nconst paramsOptions = {\n  particles: {\n    number: {\n      value: 100,\n    },\n    size: {\n      value: 3,\n    },\n  },\n};\n\nconst initialState = {\n  id: \"\",\n  name: \"\",\n  email: \"\",\n  entries: 0,\n  password: \"\",\n  joined: \"\",\n};\n\nfunction App() {\n  const [inputValue, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [box, setBox] = useState({}); //face dectect box\n  const [signInRoute, setSignInRoute] = useState(\"signin\");\n  const [isSignIn, setIsSignIn] = useState(false);\n  const [updateUser, setUpdateUser] = useState(initialState);\n\n  const handleUserUpdate = (data) => {\n    setUpdateUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      password: data.password,\n      joined: data.joined,\n    });\n  };\n\n  const onChangeRoute = (route) => {\n    if (route === \"home\") {\n      setIsSignIn(true);\n    } else if (route === \"signout\") {\n      setUpdateUser(initialState);\n      setIsSignIn(false);\n      setInput(\"\");\n      setImageUrl(\"\");\n      setBox(\"\");\n    }\n    setSignInRoute(route);\n  };\n\n  const imageCalculation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      rightCol: width - clarifaiFace.right_col * width,\n      topRow: clarifaiFace.top_row * height,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  // set the calculated image value to display function\n  const displayFaceBox = (calculatedImage) => {\n    setBox(calculatedImage);\n  };\n\n  const onChangeHandle = (e) => {\n    setInput(e.target.value);\n  };\n\n  const onSubmitPicture = () => {\n    setImageUrl(inputValue);\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, inputValue)\n      .then((response) => {\n        if (response) {\n          fetch(\" https://limitless-fortress-98511.herokuapp.com/findface\", {\n            method: \"put\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              id: updateUser.id,\n            }),\n          })\n            .then((response) => response.json())\n            .then((data) =>\n              setUpdateUser((prevState) => {\n                return { ...prevState, entries: data };\n              })\n            )\n            .catch((err) => console.log(err));\n        }\n        displayFaceBox(imageCalculation(response)).catch((error) =>\n          console.log(error)\n        );\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <Particles className=\"particles\" params={paramsOptions} />\n      <Navigation onChangeRoute={onChangeRoute} isSignedIn={isSignIn} />\n      {signInRoute === \"home\" ? (\n        <div>\n          <Logo />\n          <Rank updateUser={updateUser} />\n          <ImageLinkForm\n            onChangeHandle={onChangeHandle}\n            onSubmitPicture={onSubmitPicture}\n          />\n          <FaceRecognition box={box} imageUrl={imageUrl} />\n        </div>\n      ) : signInRoute === \"signin\" ? (\n        <SignIn\n          handleUserUpdate={handleUserUpdate}\n          onChangeRoute={onChangeRoute}\n        />\n      ) : (\n        <Register\n          handleUserUpdate={handleUserUpdate}\n          onChangeRoute={onChangeRoute}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.469fb591.jpg\";"],"sourceRoot":""}